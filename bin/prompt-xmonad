#!/usr/bin/env bash
#
# A prompt for switching status bars for Xmonad.
# Uses: xmonad polybar xmobar rofi dmenu fzf

MENU_ITEMS=5
source _prompt_helper 2>/dev/null

config_dir="$HOME/.dotfiles/xmonad"
config_main='xmonad.hs'

config_polybar='xmonad-with-polybar.hs'
config_xmobar='xmonad-with-xmobar.hs'

cmd_kill_polybar='killall -q polybar'
cmd_kill_xmobar='killall -q xmobar'

cmd_kill_current_bar='' # leave empty; will be updated according to menu selection

main() {
  declare -a options=(
    "Polybar"
    "Xmobar"
  )

  choice=$(printf '%s\n' "${options[@]}" | ${MENU} 'Xmonad bar:')
  selected_config=''

  case $choice in
    'Polybar')
      selected_config=$config_polybar
      cmd_kill_current_bar=$cmd_kill_xmobar
      ;;
    'Xmobar')
      selected_config=$config_xmobar
      cmd_kill_current_bar=$cmd_kill_polybar
      ;;
    *)
      # It is a common practice to use the wildcard asterisk symbol (*) as a final
      # pattern to define the default case. This pattern will always match.
      exit 0
      ;;
  esac

  current_config=$(file -b $config_dir/$config_main)
  if echo $current_config | grep -E -q '^symbolic link to (.*)$'; then
    current_config=$(basename $(readlink -f $config_dir/$config_main))
  else
    echo "Config file $config_dir/$config_main is not a symlink! (File type: ${current_config})" >&2
    exit 1
  fi

  if [ "$current_config" == "$selected_config" ]; then
    echo "Config file $config_dir/$config_main already links to $selected_config" >&2
    exit 0
  else
    echo "Changing symlink $config_dir/$config_main to point to $selected_config" >&2
    $(cd $config_dir && ln -sfn $selected_config $config_main)

    echo "Killing current bar (${cmd_kill_current_bar})" >&2
    $($cmd_kill_current_bar)

    echo "Recompiling Xmonad to apply changes" >&2
    xmonad --recompile

    ps cax | grep xmonad > /dev/null
    if [ $? -eq 0 ]; then
      xmonad --restart
    fi
  fi
}

MENU="$(get_menu_program "$@")"
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
